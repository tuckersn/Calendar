export enum TodoItemType {
	ShortTerm = 0,
	LongTerm = 1,
	StickyNote = 2
}

export enum TodoItemStatus {
	Active = 0,
	Completed = 1,
	Inactive = 2
}

export interface TodoItemRecord {
	/**
	 * Auto generated incremental id
	 */
	id: number;
	/**
	 * URL safe UUID key generated by nanoid
	 */
	uuid: string;
	title: string;
	itemType: TodoItemType;
	status: TodoItemStatus;
	/**
	 * When should this item be completed by?
	 * This will be used by notifications and reminders.
	 */
	dueDate: Date | null;
	/**
	 * Last time this item was updated.
	 */
	updated: Date | null;
	/**
	 * Completed time of this item.
	 */
	completed: Date | null;
	/**
	 * Set to NOW() by default.
	 */
	created: Date;
}

export type TodoItemRecordInsertRequiredFields = Pick<TodoItemRecord, 'title'>;

export const DEFAULT_TODO_ITEM_RECORD_FIELDS: Pick<TodoItemRecord, 'itemType' | 'status' | 'dueDate' | 'updated'> = {
	itemType: TodoItemType.ShortTerm,
	status: TodoItemStatus.Active,
	dueDate: null,
	updated: null
};